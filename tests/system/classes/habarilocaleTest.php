<?php

require_once dirname( dirname( dirname( __FILE__ ) ) ) . DIRECTORY_SEPARATOR . 'phpunit_bootstrap.php';

class system_classes_HabariLocaleTest extends PHPUnit_Framework_TestCase
{

	public function testFile_reading()
	{
		$this->assertTrue( HabariLocale::__run_loadfile_test( dirname( dirname( dirname( __FILE__ ) ) ) . DIRECTORY_SEPARATOR . 'data' . DIRECTORY_SEPARATOR . 'test_locale-en.mo' ) );
	}

	public function testPlural_tests()
	{
		// de
		$this->assertEquals( HabariLocale::__run_plural_test( 'Plural-Forms: nplurals=2; plural=(n==1?0:1);' ), '10111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111' );
		// fr
		$this->assertEquals( HabariLocale::__run_plural_test( 'Plural-Forms: nplurals=2; plural=n>1?1:0' ), '00111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111' );
		// lt
		$this->assertEquals( HabariLocale::__run_plural_test( 'Plural-Forms: nplurals=3; plural=n%10==1 && n%100!=11 ? 0 : n%10>=2 && (n%100<10 || n%100>=20) ? 1 : 2;' ), '20111111112222222222201111111120111111112011111111201111111120111111112011111111201111111120111111112011111111222222222220111111112011111111201111111120111111112011111111201111111120111111112011111111' );
		// cz
		$this->assertEquals( HabariLocale::__run_plural_test( 'Plural-Forms: nplurals=3; plural=n%10==1 && n%100!=11 ? 0 : n%10>=2 && n%10<=4 && (n%100<10 || n%100>=20) ? 1 : 2;' ), '20111222222222222222201112222220111222222011122222201112222220111222222011122222201112222220111222222011122222222222222220111222222011122222201112222220111222222011122222201112222220111222222011122222' );
		// hu
		$this->assertEquals( HabariLocale::__run_plural_test( 'Plural-Forms: nplurals=1; plural=0;' ), '00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000' );
		// ru
		$this->assertEquals( HabariLocale::__run_plural_test( 'Plural-Forms: nplurals=3; plural=n%10==1 && n%100!=11 ? 0 : n%10>=2 && n%10<=4 && (n%100<10 || n%100>=20) ? 1 : 2;' ), '20111222222222222222201112222220111222222011122222201112222220111222222011122222201112222220111222222011122222222222222220111222222011122222201112222220111222222011122222201112222220111222222011122222' );
		// pl
		$this->assertEquals( HabariLocale::__run_plural_test( 'Plural-Forms: nplurals=3; plural=n==1 ? 0 : n%10>=2 && n%10<=4 && (n%100<10 || n%100>=20) ? 1 : 2' ), '20111222222222222222221112222222111222222211122222221112222222111222222211122222221112222222111222222211122222222222222222111222222211122222221112222222111222222211122222221112222222111222222211122222' );
		// sl
		$this->assertEquals(HabariLocale::__run_plural_test( 'Plural-Forms: nplurals=4; plural=n%100==1 ? 0 : n%100==2 ? 1 : n%100==3 || n%100==4 ? 2 : 3' ), '30122333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333012233333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333');
	}
}
?>
